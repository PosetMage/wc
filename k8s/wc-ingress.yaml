# wc-ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-wc
  namespace: web-component
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: 'true' # Optional: Redirect HTTP to HTTPS
    nginx.ingress.kubernetes.io/limit-rps: '1' # Rate limit: 1 request per second
    nginx.ingress.kubernetes.io/proxy-buffering: 'off'
    nginx.ingress.kubernetes.io/proxy-cache: 'off'
    # for mime types
    nginx.ingress.kubernetes.io/use-regex: 'true'
    nginx.ingress.kubernetes.io/proxy-hide-header: 'Content-Type'
    nginx.ingress.kubernetes.io/upstream-hash-by: '$request_uri'
    nginx.ingress.kubernetes.io/proxy-cache-bypass: '1'
    nginx.ingress.kubernetes.io/proxy-no-cache: '1'

    # — CORS annotations —
    nginx.ingress.kubernetes.io/enable-cors: 'true' # enable CORS support :contentReference[oaicite:0]{index=0}
    nginx.ingress.kubernetes.io/cors-allow-origin: '*' # allow any origin :contentReference[oaicite:1]{index=1}
    nginx.ingress.kubernetes.io/cors-allow-methods: 'GET' # allowed HTTP methods :contentReference[oaicite:2]{index=2}
    nginx.ingress.kubernetes.io/cors-allow-headers: 'Content-Type, Authorization, X-Requested-With, Accept, Origin'

spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - wc.posetmage.com
      secretName: wc-tls-secret
  rules:
    - host: wc.posetmage.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: wc-service
                port:
                  number: 80
